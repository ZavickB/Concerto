{% block modalBody %}
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">{{ idea.title }}</h5>
            <div class="d-flex align-items-center ml-auto">
                <button type="button" class="btn btn-outline-secondary btn-sm modalbox-edit-idea mr-3" id="editIdeaBtn" data-toggle="modal" data-target="#editIdeaModal" data-content-url="{{ path('idea_edit', {'id': idea.id}) }}">
                    <i class="bi bi-pencil-square"></i> Edit
                </button>
                <button type="button" class="btn btn-outline-danger btn-sm modalbox-edit-idea" id="deleteIdeaBtn" data-idea-id="{{ idea.id }}" data-project-id="{{ idea.project.id }}">
                    <i class="bi bi-trash"></i> Delete
                </button>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
        <div class="modal-body">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <p>{{ idea.description }}</p>
                        <div class="d-flex align-items-center">
                            <img src="{{ idea.owner.avatar ?? asset('images/concerto.png') }}" alt="{{ idea.owner.username|title }}" class="rounded-circle mr-2" style="width: 40px; height: 40px;">
                            <div>
                                <strong>{{ idea.owner.username|title }}</strong>
                                <span class="text-muted ml-2">{{ idea.startDate|date('F j, Y, H:i') }}</span>
                            </div>
                        </div>
                        </div>
                    </div>
                </div>
                
                <hr>
                
                {% macro renderComments(comments, level) %}
                    {% for comment in comments %}
                        {% if level == 0 and comment.parentComment is empty %}
                            <div class="comment mb-3" style="margin-left: {{ level * 20 }}px; border-left: 3px solid #ccc;" id="comment-{{ comment.id }}">
                                <div class="comment-header d-flex align-items-center">
                                    <img src="{{ comment.owner.avatar ?? asset('images/concerto.png') }}" alt="{{ comment.owner.username|title }}" class="rounded-circle mr-2" style="width: 40px; height: 40px;">
                                    <div>
                                        <strong>{{ comment.owner.username }}</strong>
                                        <span class="text-muted ml-2">{{ comment.postDate|date('F j, Y, H:i') }}</span>
                                    </div>
                                </div>
                                <p>{{ comment.content }}</p>
                                <div class="d-flex align-items-center">
                                    <a href="#" class="reply-link text-primary mr-3" data-parent="{{ comment.id }}" data-parent-owner="{{ comment.owner.username }}">
                                        Reply
                                    </a>
                                    {% if comment.childComments is not empty %}
                                        <button class="btn btn-sm btn-link toggle-replies-btn" data-target="#replies-{{ comment.id }}" data-parent="{{ comment.id }}">
                                            View replies
                                        </button>
                                    {% endif %}
                                </div>
                                {% if comment.childComments is not empty %}
                                    <div id="replies-{{ comment.id }}" class="replies collapse"></div>
                                {% endif %}
                            </div>
                        {% endif %}
                    {% endfor %}
                {% endmacro %}

                {{ _self.renderComments(idea.comments, 0) }}

                <hr>
                <div id="comment-form-container">
                    <div id="formContainer">
                        <form id="commentForm" class="mb-3" action="{{ path('comment_add', {'id': idea.id}) }}" method="POST">
                            {{ form_widget(form._token) }}
                            {{ form_widget(form.parentComment) }}
                            <div class="form-group">
                                <label for="commentContent">Add a Comment:</label>
                                {{ form_widget(form.content, {'attr': {'class': 'form-control', 'rows': '3', 'id': 'commentContent'}}) }}
                            </div>
                            <div class="text-right">
                                <button type="button" class="btn btn-outline-secondary btn-sm" id="cancelForm" style="display: none;">Cancel</button>
                                <button type="submit" class="btn btn-primary btn-sm ml-2">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editIdeaModal" tabindex="-1" role="dialog" aria-labelledby="editIdeaModalContent" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body" id="editIdeaModalContent">
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function() {
            //Delete idea on click on delete button
            $('#deleteIdeaBtn').on('click', function() {
                var ideaId = $(this).data('idea-id');

                if (confirm('Are you sure you want to delete this idea?')) {
                    deleteIdea(ideaId);
                }
            });

            function deleteIdea(ideaId) {
                $.ajax({
                    url: '/idea/' + ideaId,
                    type: 'DELETE',
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token('delete' ~ idea.id) }}',
                        'Content-Type': 'application/json'
                    },
                    success: function(response) {
                        if (response.success) {
                            // Close the modal
                            $('#editIdeaModal').modal('hide');
                            $('#ideaModal').modal('hide');
                            // Refresh the page
                            location.reload();
                        } else {
                            console.error('Failed to delete the idea.');
                        }
                    },
                    error: function(xhr) {
                        console.error('Failed to delete the idea.');
                    }
                });
            }

            // New Project Modal
            $('.modalbox-edit-idea').on('click', function(event) {
                event.preventDefault();
                var contentUrl = $(this).data('content-url');
                $('#editIdeaModal').modal('show');
                $('#editIdeaModalContent').html('<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</div>');
                $.get(contentUrl, function(data) {
                    $('#editIdeaModalContent').html(data);
                });
            });

            $('#submitCommentBtn').on('click', function() {
                var submitBtn = $(this);
                submitBtn.prop('disabled', true);
                submitBtn.html('<i class="fas fa-spinner fa-spin"></i> Submitting...');
            });

            // Click event for reply links
            $(document).on('click', '.reply-link', function(e) {
                e.preventDefault();
                var parentId = $(this).data('parent');
                var parentOwner = $(this).data('parent-owner');
                $('#comment_parentComment').val(parentId);

                // Move form under the comment where reply was clicked
                var commentDiv = $(this).closest('.comment');
                $('#formContainer').insertAfter(commentDiv);

                // Show cancel button and hide submit button
                $('#cancelForm').show();
            });

            // Click event for cancel button
            $(document).on('click', '#cancelForm', function() {
                // Reset form fields if needed
                $('#commentForm')[0].reset();
                $('#comment_parentComment').val(null);

                // Move form back to original position
                $('#formContainer').appendTo('#comment-form-container'); // Adjust as per your container selector
                $('#commentForm button[type="submit"]').show();
                $('#cancelForm').hide();
            });

            // Click event for toggle replies buttons
            $(document).on('click', '.toggle-replies-btn', function() {
                var target = $(this).data('target');
                var parentId = $(this).data('parent');
                var targetDiv = $(target);

                if (targetDiv.children().length === 0) {
                    $.ajax({
                        url: "{{ path('fetch_comments', {'id': idea.id}) }}",
                        method: "GET",
                        data: { parentId: parentId },
                        success: function(data) {
                            targetDiv.html(data);
                            targetDiv.collapse('show');
                        }
                    });
                } else {
                    targetDiv.collapse('toggle');
                }

                // Update button text
                if (targetDiv.hasClass('collapse')) {
                    $(this).text('View replies');
                } else {
                    $(this).text('Hide replies');
                }
            });
        });
    </script>
{% endblock %}
